module.exports = {
  '$schema': 'http://schemas.taskcluster.net/base/v1/api-reference.json#',
  title: 'Hooks API Documentation',
  description: 'Todo',
  baseUrl: 'http://localhost:60401/v1',
  entries:
    [ { type: 'function',
      method: 'get',
      route: '/hooks',
      args: [],
      name: 'listHookGroups',
      stability: 'experimental',
      title: 'List hook groups',
      description: 'This endpoint will return a list of all available groups that defined\nhooks belong to.',
      output: 'http://schemas.taskcluster.net/hooks/v1/list-hook-groups-response.json' },
      { type: 'function',
        method: 'get',
        route: '/hooks/<hookGroup>',
        args: [Object],
        name: 'listHooks',
        stability: 'experimental',
        title: 'List hooks in a given group',
        description: 'Get a list of all the hook definitions within a given hook group.',
        output: 'http://schemas.taskcluster.net/hooks/v1/list-hooks-response.json' },
        { type: 'function',
          method: 'get',
          route: '/hooks/<hookGroup>/<hookId>',
          args: [Object],
          name: 'hook',
          stability: 'experimental',
          title: 'Get hook definition',
          description: 'This end-point will return the hook-defintion.',
          output: 'http://schemas.taskcluster.net/hooks/v1/hook-definition.json' },
          { type: 'function',
            method: 'get',
            route: '/hooks/<hookGroup>/<hookId>/schedule',
            args: [Object],
            name: 'getHookSchedule',
            stability: 'experimental',
            title: 'Get hook schedule',
            description: 'This end-point will return the next scheduled date of a hook.',
            output: 'http://schemas.taskcluster.net/hooks/v1/hook-schedule.json' },
            { type: 'function',
              method: 'put',
              route: '/hooks/<hookGroup>/<hookId>',
              args: [Object],
              name: 'createHook',
              stability: 'experimental',
              title: 'Create a hook',
              description: 'Define and create a hook that will spawn a task when triggered. This\nhook can be triggered through the web endpoint, or through a message\non the Pulse exchange that the hook is binded to.',
              scopes: [Object],
              input: 'http://schemas.taskcluster.net/hooks/v1/create-hook-request.json',
              output: 'http://schemas.taskcluster.net/hooks/v1/hook-definition.json' },
              { type: 'function',
                method: 'patch',
                route: '/hooks/<hookGroup>/<hookId>',
                args: [Object],
                name: 'updateHook',
                stability: 'experimental',
                title: 'Update a hook',
                description: 'Update the hook definition.',
                scopes: [Object],
                input: 'http://schemas.taskcluster.net/hooks/v1/create-hook-request.json',
                output: 'http://schemas.taskcluster.net/hooks/v1/hook-definition.json' },
                { type: 'function',
                  method: 'delete',
                  route: '/hooks/<hookGroup>/<hookId>',
                  args: [Object],
                  name: 'removeHook',
                  stability: 'experimental',
                  title: 'Delete a hook',
                  description: 'Remove a hook definition.',
                  scopes: [Object] },
                { type: 'function',
                  method: 'get',
                  route: '/hooks/<hookGroup>/<hookId>/token',
                  args: [Object],
                  name: 'getTriggerToken',
                  stability: 'experimental',
                  title: 'Get a trigger token',
                  description: 'Retrieve a unique secret token for triggering the specified hook. This\ntoken can be deactivated with resetTriggerToken.',
                  scopes: [Object],
                  output: 'http://schemas.taskcluster.net/hooks/v1/trigger-token-response.json' },
                  { type: 'function',
                    method: 'post',
                    route: '/hooks/<hookGroup>/<hookId>/token',
                    args: [Object],
                    name: 'resetTriggerToken',
                    stability: 'experimental',
                    title: 'Reset a trigger token',
                    description: 'Reset the token for triggering a given hook. This invalidates token that\nmay have been issued via getTriggerToken with a new token.',
                    scopes: [Object],
                    output: 'http://schemas.taskcluster.net/hooks/v1/trigger-token-response.json' },
                    { type: 'function',
                      method: 'post',
                      route: '/hooks/<hookGroup>/<hookId>/trigger/<token>',
                      args: [Object],
                      name: 'triggerHookWithToken',
                      stability: 'experimental',
                      title: 'Trigger a hook with a token',
                      description: 'This endpoint triggers a defined hook with a valid token.',
                      input: 'http://schemas.taskcluster.net/hooks/v1/trigger-payload.json',
                      output: 'http://schemas.taskcluster.net/hooks/v1/task-status.json' },
                      { type: 'function',
                        method: 'post',
                        route: '/hooks/<hookGroup>/<hookId>/trigger',
                        args: [Object],
                        name: 'triggerHook',
                        stability: 'experimental',
                        title: 'Trigger a hook',
                        description: 'Trigger a hook, given that you have the correct scoping for it',
                        scopes: [Object],
                        output: 'http://schemas.taskcluster.net/hooks/v1/task-status.json' } ] }
